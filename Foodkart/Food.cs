//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Foodkart
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;

    [System.ComponentModel.DataAnnotations.MetadataType(typeof(FoodMetaData))]
    public partial class Food
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Food()
        {
            this.CartItems = new HashSet<CartItem>();
            this.OrderItems = new HashSet<OrderItem>();
        }
    
        public long FoodId { get; set; }
        public string FoodName { get; set; }
        public long FoodQty { get; set; }
        public long FoodUnitPrice { get; set; }
        public string FoodCategory { get; set; }
        public string FoodType { get; set; }
        public string FoodPhotoUrl { get; set; }
        public long FoodMenuId { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CartItem> CartItems { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<OrderItem> OrderItems { get; set; }
        public virtual Menu Menu { get; set; }
    }

    internal sealed class FoodMetaData
    {
        [Required(ErrorMessage = "Please enter food name"), MinLength(1, ErrorMessage = "Please enter food name"), Display(Name = "Food Name")]
        public string FoodName { get; set; }

        [Required(ErrorMessage = "Minimum 50 quantity food items"), Range(50, long.MaxValue, ErrorMessage = "Minimum 50 quantity food items"), Display(Name = "Food Quanity")]
        public long FoodQty { get; set; }

        [Required(ErrorMessage = "Food Items cannnot be free"), Range(1, long.MaxValue, ErrorMessage = "Food Items cannnot be free"), Display(Name = "Food Quanity")]
        public long FoodUnitPrice { get; set; }
    }

    
}
